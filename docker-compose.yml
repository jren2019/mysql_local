version: '3.6'

services:
    # MySQL
    my-MySQL:
        container_name: my-MySQL
        image: mysql
        command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--default-authentication-plugin=mysql_native_password']
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: 'root'
            MYSQL_DATABASE: 'mysql_local'
            MYSQL_PASSWORD: 'root'

        volumes:
            - ./init:/docker-entrypoint-initdb.d:rw
            - ../mysql_data:/var/lib/mysql:rw
        ports:
            - "3306:3306"
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE

    my-redis:
        image: redis
        container_name: my-redis
        restart: unless-stopped
        ports:
          - "6379:6379"

    my-mongodb:
      image: mongo:4.2.3-bionic
      container_name: my-mongodb
      ports:
        - 27017:27017
      environment:
        - MONGO_INITDB_DATABASE=test
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin
      volumes:
        # seeding scripts
        - ./mongo-entrypoint:/docker-entrypoint-initdb.d
        # named volumes
        - mongodb:/data/db
        - mongoconfig:/data/configdb

    my-postgres:
      image: postgres:latest
      container_name: my-postgres
      volumes:
        - dbdata:/var/lib/postgresql/data
      ports:
        - 5432:5432
      environment:
        POSTGRES_USER: "root"
        POSTGRES_PASSWORD: "root"

    adminer:
        image: adminer
        container_name: adminer
        restart: always
        ports:
            - 8080:8080
        environment:
          # change this to the container's name of the database that you are going to work on
          ADMINER_DEFAULT_SERVER: my-MySQL
volumes:
    # default dir on Ubuntu: /var/lib/docker/volumes
    mongodb:
    mongoconfig:
    dbdata:
